{"remainingRequest":"/Users/student02/Desktop/youduitong1/node_modules/babel-loader/lib/index.js!/Users/student02/Desktop/youduitong1/node_modules/eslint-loader/index.js??ref--13-0!/Users/student02/Desktop/youduitong1/src/utils/Utils.js","dependencies":[{"path":"/Users/student02/Desktop/youduitong1/src/utils/Utils.js","mtime":1567912396000},{"path":"/Users/student02/Desktop/youduitong1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student02/Desktop/youduitong1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/student02/Desktop/youduitong1/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nvar Util = {\n  /**\r\n   *校验手机号\r\n   * @param tel\r\n   * @returns {boolean}\r\n   */\n  isMobile: function isMobile(tel) {\n    var pattern = /^13[\\d]{9}$|^14[5,7]{1}\\d{8}$|^15[^4]{1}\\d{8}$|^17[0,6,7,8]{1}\\d{8}$|^18[\\d]{9}$/;\n    return pattern.test(tel);\n  },\n\n  /**\n   * 校验密码\n   * @param password\n   * @returns {boolean}\n   */\n  isPassword: function isPassword(pwd) {\n    var pattern = /((?=.*[a-z])(?=.*\\d)|(?=[a-z])(?=.*[#@!~%^&*._$,?+=-])|(?=.*\\d)(?=.*[#@!~%^&*._$,?+=-]))[a-z\\d#@!~%^&*._$,?+=-]{6,16}/i;\n    return pattern.test(pwd);\n  },\n\n  /**\r\n   * 校验邮箱\r\n   * @param email\r\n   * @constructor\r\n   */\n  isEmail: function isEmail(email) {\n    var pattern = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/;\n    return pattern.test(email);\n  },\n\n  /**\r\n   * 校验身份证\r\n   * @param idCard\r\n   * @constructor\r\n   */\n  isIDCard: function isIDCard(idCard) {\n    var pattern = /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/;\n    return pattern.test(idCard);\n  },\n\n  /**\r\n   * 数字格式化加逗号\r\n   * @param num\r\n   * @returns {string}\r\n   */\n  toThousands: function toThousands(num) {\n    num = (num || 0).toString();\n    var result = '';\n\n    while (num.length > 3) {\n      result = ',' + num.slice(-3) + result;\n      num = num.slice(0, num.length - 3);\n    }\n\n    if (num) {\n      result = num + result;\n    }\n\n    return result;\n  }\n};\nexport default Util;",{"version":3,"sources":["/Users/student02/Desktop/youduitong1/src/utils/Utils.js"],"names":["Util","isMobile","tel","pattern","test","isPassword","pwd","isEmail","email","isIDCard","idCard","toThousands","num","toString","result","length","slice"],"mappings":";AAAA,IAAIA,IAAI,GAAG;AACV;;;;;AAKAC,EAAAA,QAAQ,EAAE,kBAASC,GAAT,EAAc;AACvB,QAAIC,OAAO,GAAG,kFAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaF,GAAb,CAAP;AACA,GATS;;AAUV;;;;;AAKAG,EAAAA,UAAU,EAAC,oBAASC,GAAT,EAAa;AACvB,QAAIH,OAAO,GAAG,wHAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaE,GAAb,CAAP;AACA,GAlBS;;AAmBV;;;;;AAKAC,EAAAA,OAAO,EAAE,iBAASC,KAAT,EAAgB;AACxB,QAAIL,OAAO,GAAG,+EAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaI,KAAb,CAAP;AACA,GA3BS;;AA4BV;;;;;AAKAC,EAAAA,QAAQ,EAAE,kBAASC,MAAT,EAAiB;AAC1B,QAAIP,OAAO,GACV,gIADD;AAEA,WAAOA,OAAO,CAACC,IAAR,CAAaM,MAAb,CAAP;AACA,GArCS;;AAsCV;;;;;AAKAC,EAAAA,WAAW,EAAE,qBAASC,GAAT,EAAc;AAC1BA,IAAAA,GAAG,GAAG,CAACA,GAAG,IAAI,CAAR,EAAWC,QAAX,EAAN;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,WAAOF,GAAG,CAACG,MAAJ,GAAa,CAApB,EAAuB;AACtBD,MAAAA,MAAM,GAAG,MAAMF,GAAG,CAACI,KAAJ,CAAU,CAAC,CAAX,CAAN,GAAsBF,MAA/B;AACAF,MAAAA,GAAG,GAAGA,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaJ,GAAG,CAACG,MAAJ,GAAa,CAA1B,CAAN;AACA;;AACD,QAAIH,GAAJ,EAAS;AACRE,MAAAA,MAAM,GAAGF,GAAG,GAAGE,MAAf;AACA;;AACD,WAAOA,MAAP;AACA;AAtDS,CAAX;AAwDA,eAAed,IAAf","sourcesContent":["var Util = {\r\n\t/**\r\n\t *校验手机号\r\n\t * @param tel\r\n\t * @returns {boolean}\r\n\t */\r\n\tisMobile: function(tel) {\r\n\t\tlet pattern = /^13[\\d]{9}$|^14[5,7]{1}\\d{8}$|^15[^4]{1}\\d{8}$|^17[0,6,7,8]{1}\\d{8}$|^18[\\d]{9}$/;\r\n\t\treturn pattern.test(tel)\r\n\t},\n\t/**\n\t * 校验密码\n\t * @param password\n\t * @returns {boolean}\n\t */\n\tisPassword:function(pwd){\n\t\tlet pattern = /((?=.*[a-z])(?=.*\\d)|(?=[a-z])(?=.*[#@!~%^&*._$,?+=-])|(?=.*\\d)(?=.*[#@!~%^&*._$,?+=-]))[a-z\\d#@!~%^&*._$,?+=-]{6,16}/i\n\t\treturn pattern.test(pwd)\n\t},\r\n\t/**\r\n\t * 校验邮箱\r\n\t * @param email\r\n\t * @constructor\r\n\t */\r\n\tisEmail: function(email) {\r\n\t\tlet pattern = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/\r\n\t\treturn pattern.test(email);\r\n\t},\r\n\t/**\r\n\t * 校验身份证\r\n\t * @param idCard\r\n\t * @constructor\r\n\t */\r\n\tisIDCard: function(idCard) {\r\n\t\tlet pattern =\r\n\t\t\t/^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/;\r\n\t\treturn pattern.test(idCard);\r\n\t},\r\n\t/**\r\n\t * 数字格式化加逗号\r\n\t * @param num\r\n\t * @returns {string}\r\n\t */\r\n\ttoThousands: function(num) {\r\n\t\tnum = (num || 0).toString();\r\n\t\tlet result = '';\r\n\t\twhile (num.length > 3) {\r\n\t\t\tresult = ',' + num.slice(-3) + result;\r\n\t\t\tnum = num.slice(0, num.length - 3);\r\n\t\t}\r\n\t\tif (num) {\r\n\t\t\tresult = num + result;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n}\r\nexport default Util\n"]}]}